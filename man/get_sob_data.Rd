% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_sob_data.R
\name{get_sob_data}
\alias{get_sob_data}
\title{Downloads and imports data from RMA's summary of buisness app}
\source{
Data is downloaded directly from RMA's summary of business app: \url{https://public-rma.fpac.usda.gov/apps/SummaryOfBusiness/ReportGenerator}
}
\usage{
get_sob_data(
  year = as.numeric(format(Sys.Date(), "\%Y")),
  crop = NULL,
  delivery_type = NULL,
  insurance_plan = NULL,
  state = NULL,
  county = NULL,
  fips = NULL,
  cov_lvl = NULL,
  comm_cat = "B",
  dest_file = NULL,
  group_by = NULL,
  sob_version = "sob"
)
}
\arguments{
\item{year}{a numeric value (either single value or a vector of values) that indicate the crop year (ex: \code{2024} or \code{c(2022,2023,2024)})}

\item{crop}{can be either a character string indicating a crop (i.e. \code{corn}) or a numeric value indicating the crop code (i.e. \code{41}). Inputting a vector with multiple values will return data for multiple crops. To get a data frame containing all the available crops and crop codes use \code{get_crop_codes()}.}

\item{delivery_type}{a character string of either "RBUP" for buyup policies or "RCAT" for catastrophic policies. Leaving blank will return data for both types aggregated while inputing a vector with both values (i.e. \code{c("RBUP","RCAT")}) will return disaggregated data for both types.}

\item{insurance_plan}{can be either a character string indicating an insurance plan (ex: \code{yp} and \verb{yield protection} are both valid) or a numeric value indicating the insurance plan code (i.e. \code{1}). Inputting a vector with multiple values will return data for multiple insurance plans. To get a data frame containing all the available insurance plans and insurance plan codes use \code{get_insurance_plan_codes()}.}

\item{state}{can be a character string indicating the state abbreviation or state name. Numeric values corresponding to state FIPS codes can also be supplied.}

\item{county}{either a character string with a county name or 5-digit FIPS code corresponding to a county. when the county is specified using the name of the county, the state parameter must also be specified.}

\item{fips}{a numeric value corresponding to a 5-digit FIPS code of a U.S. county.}

\item{cov_lvl}{a numeric value indicating the coverage level. Valid coverage levels are \code{c(0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95)}}

\item{comm_cat}{a character vector of either "S" for standard, "L" for livestock, or "B" for both (the default).}

\item{dest_file}{an optional character string specifying a .xlsx file path. When specified, the function will export the data to the supplied file path instead of returning a the data as tibble.}

\item{group_by}{an optional character where any of the other parameter names
can be entered to further disagregate the data. When left empty, the function
returns data the level of dissagregation associated with the specified parameters.
For example, \code{get_sob_data(year = 2023:2024)} will return data for 2023 and 2024
dis-aggregated by year only where. The function call
\code{get_sob_data(year = 2023:2024, group_by = c("insurance_plan","cov_lvl"))} will
return the same data, but further dissagregated by insurance plan and coverage level}

\item{sob_version}{a character string indicating the version of the summary of business to use. The default is "sob" which uses the summary of business app. The alternative is "sobtpu" which downloads the summary of business by type, practice, and unit structure.}
}
\value{
Returns a tibble
}
\description{
Downloads and imports data from RMA's summary of buisness app
}
\examples{
\dontrun{
get_sob_data(year = 2023)
get_sob_data(year = 2015:2020, crop = "corn")
get_sob_data(year = 2022, crop = c(41, 81), group_by = "state")
}
}
